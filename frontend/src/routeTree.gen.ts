/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as CreateRouteImport } from './routes/create'
import { Route as IndexRouteImport } from './routes/index'
import { Route as QuizzesIndexRouteImport } from './routes/quizzes/index'
import { Route as QuizzesQuizIdRouteImport } from './routes/quizzes/$quizId'

const CreateRoute = CreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const QuizzesIndexRoute = QuizzesIndexRouteImport.update({
  id: '/quizzes/',
  path: '/quizzes/',
  getParentRoute: () => rootRouteImport,
} as any)
const QuizzesQuizIdRoute = QuizzesQuizIdRouteImport.update({
  id: '/quizzes/$quizId',
  path: '/quizzes/$quizId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create': typeof CreateRoute
  '/quizzes/$quizId': typeof QuizzesQuizIdRoute
  '/quizzes': typeof QuizzesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create': typeof CreateRoute
  '/quizzes/$quizId': typeof QuizzesQuizIdRoute
  '/quizzes': typeof QuizzesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/create': typeof CreateRoute
  '/quizzes/$quizId': typeof QuizzesQuizIdRoute
  '/quizzes/': typeof QuizzesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/create' | '/quizzes/$quizId' | '/quizzes'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/create' | '/quizzes/$quizId' | '/quizzes'
  id: '__root__' | '/' | '/create' | '/quizzes/$quizId' | '/quizzes/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateRoute: typeof CreateRoute
  QuizzesQuizIdRoute: typeof QuizzesQuizIdRoute
  QuizzesIndexRoute: typeof QuizzesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/create': {
      id: '/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof CreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/quizzes/': {
      id: '/quizzes/'
      path: '/quizzes'
      fullPath: '/quizzes'
      preLoaderRoute: typeof QuizzesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/quizzes/$quizId': {
      id: '/quizzes/$quizId'
      path: '/quizzes/$quizId'
      fullPath: '/quizzes/$quizId'
      preLoaderRoute: typeof QuizzesQuizIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateRoute: CreateRoute,
  QuizzesQuizIdRoute: QuizzesQuizIdRoute,
  QuizzesIndexRoute: QuizzesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
